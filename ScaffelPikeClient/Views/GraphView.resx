<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>